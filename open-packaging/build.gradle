apply plugin: 'java-library'
apply plugin: 'com.github.johnrengelman.shadow'

description = 'Neo4j Graph Data Science :: Open Packaging'
group = 'org.neo4j.gds'

apply from: '../gradle/licensing.gradle'

dependencies {
    implementation project(':proc')
    implementation project(':proc-sysinfo')
    implementation project(':open-write-services')

    testImplementation project(':proc-test')
}

task licenseFile {
    outputs.file(distributionLicenseFile)
}

task checkLicensesFile {
    dependsOn generateLicensesFiles

    doLast {
        def licenceHeader = rootProject.file("$publicDir/etc/licenses/headers/LICENSES-header.txt").text
        def generatedLicenseFile = file("$buildDir/reports/license/LICENSES.txt").text
        if (generatedLicenseFile.equals(licenceHeader)) {
            throw new GradleException("LICENSES.txt file is empty!")
        }
    }
}

shadowJar {
    dependsOn checkLicensesFile

    relocate('com.', 'org.neo4j.gds.shaded.com.') {
        exclude 'com/neo4j/**'
    }
    relocate('org.', 'org.neo4j.gds.shaded.org.') {
        exclude 'org/neo4j/**'
    }
    relocate('de.siegmar.', 'org.neo4j.gds.shaded.de.siegmar.')
    relocate('io.jsonwebtoken.', 'org.neo4j.gds.shaded.io.jsonwebtoken.')
    relocate('pabeles', 'org.neo4j.gds.shaded.pabeles')

    relocate('javassist', 'org.neo4j.gds.shaded.javassist')

    relocate('javax.annotation.', 'com.neo4j.gds.shaded.javax.annotation.')

    mergeServiceFiles()
    archiveBaseName.set("open-gds")
    archiveClassifier.set("")
    exclude 'META-INF/versions/**/*'
    exclude 'module-info.class'
    exclude 'LICENSE'
    exclude 'LICENSE-*'
    exclude 'META-INF/LICENSE*'
    exclude 'META-INF/NOTICE*'
    exclude 'THIRD-PARTY'
    exclude '*.html'
    // Exclude proto files
    exclude 'config/'
    exclude '*.proto'
    exclude 'google/'
    exclude 'ml/'
    // Exclude french localization in commons-math
    exclude 'assets/'

    from licenseFile
    from generateLicensesFiles
}

task shadowCopy(type: Copy) {
    from(shadowJar)
    into distributionDir
}

ci.finalizedBy shadowCopy
cipr.finalizedBy shadowCopy
